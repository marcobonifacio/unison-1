-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | NanoID generator
--   
--   Library and CLI tool for NanoID generation
@package NanoID
@version 3.2.1

module Data.NanoID
data NanoID
NanoID :: !ByteString -> NanoID
[unNanoID] :: NanoID -> !ByteString
newtype Alphabet
Alphabet :: ByteString -> Alphabet
[unAlphabet] :: Alphabet -> ByteString
type Length = Natural

-- | Create a new <a>Alphabet</a> from a string of symbols of your choice
toAlphabet :: String -> Alphabet

-- | Standard <a>NanoID</a> generator function
--   
--   <pre>
--   λ: g &lt;- createSystemRandom
--   λ: nanoID g
--   x2f8yFadIm-Vp14ByJ8R3
--   </pre>
nanoID :: GenIO -> IO NanoID

-- | Customable <a>NanoID</a> generator function
customNanoID :: Alphabet -> Length -> GenIO -> IO NanoID

-- | The default <a>Alphabet</a>, made of URL-friendly symbols.
defaultAlphabet :: Alphabet
numbers :: Alphabet
hexadecimalLowercase :: Alphabet
hexadecimalUppercase :: Alphabet
lowercase :: Alphabet
uppercase :: Alphabet
alphanumeric :: Alphabet
nolookalikes :: Alphabet
nolookalikesSafe :: Alphabet
instance GHC.Generics.Generic Data.NanoID.NanoID
instance GHC.Classes.Eq Data.NanoID.NanoID
instance GHC.Classes.Eq Data.NanoID.Alphabet
instance GHC.Show.Show Data.NanoID.Alphabet
instance GHC.Show.Show Data.NanoID.NanoID
instance Data.Aeson.Types.ToJSON.ToJSON Data.NanoID.NanoID
instance Data.Aeson.Types.FromJSON.FromJSON Data.NanoID.NanoID
instance Data.Serialize.Serialize Data.NanoID.NanoID
