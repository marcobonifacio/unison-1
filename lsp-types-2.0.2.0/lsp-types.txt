-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell library for the Microsoft Language Server Protocol, data types
--   
--   An implementation of the types to allow language implementors to
--   support the Language Server Protocol for their specific language.
@package lsp-types
@version 2.0.2.0


-- | This defines the types of the LSP "metamodel", which is a
--   machine-readable format specifying the types used in the LSP protocol.
--   
--   The type system is quite typescript-y, which isn't surprising given
--   that the whole protocol is very typescript-y.
--   
--   A typescript version of the metamodel types can be found here, which
--   is useful for constructing this Haskell model of them:
--   https:/<i>github.com</i>microsoft<i>vscode-languageserver-node</i>blob<i>main</i>tools<i>src</i>metaModel.ts
module Language.LSP.MetaModel.Types

-- | What direction is this message sent in: server to client, client to
--   server, or both?
data MessageDirection
ServerToClient :: MessageDirection
ClientToServer :: MessageDirection
Both :: MessageDirection

-- | The "base types" in the metamodel.
data BaseTypeName
URI :: BaseTypeName
DocumentUri :: BaseTypeName
Integer :: BaseTypeName
UInteger :: BaseTypeName
Decimal :: BaseTypeName
RegExp :: BaseTypeName
String :: BaseTypeName
Boolean :: BaseTypeName
Null :: BaseTypeName

-- | A property of a structure.
data Property
Property :: Text -> Type -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Property
[$sel:name:Property] :: Property -> Text
[$sel:type_:Property] :: Property -> Type
[$sel:optional:Property] :: Property -> Maybe Bool
[$sel:documentation:Property] :: Property -> Maybe Text
[$sel:since:Property] :: Property -> Maybe Text
[$sel:proposed:Property] :: Property -> Maybe Bool
[$sel:deprecated:Property] :: Property -> Maybe Text

-- | An anonymous structure type.
data StructureLiteral
StructureLiteral :: [Property] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> StructureLiteral
[$sel:properties:StructureLiteral] :: StructureLiteral -> [Property]
[$sel:documentation:StructureLiteral] :: StructureLiteral -> Maybe Text
[$sel:since:StructureLiteral] :: StructureLiteral -> Maybe Text
[$sel:proposed:StructureLiteral] :: StructureLiteral -> Maybe Bool
[$sel:deprecated:StructureLiteral] :: StructureLiteral -> Maybe Text

-- | The various kinds of type in the metamodel.
data Type
BaseType :: BaseTypeName -> Type
[$sel:btName:BaseType] :: Type -> BaseTypeName
ReferenceType :: Text -> Type
[$sel:rtName:BaseType] :: Type -> Text
ArrayType :: Type -> Type
[$sel:atElement:BaseType] :: Type -> Type
MapType :: Type -> Type -> Type
[$sel:mKey:BaseType] :: Type -> Type
[$sel:mValue:BaseType] :: Type -> Type
AndType :: NonEmpty Type -> Type
[$sel:aItems:BaseType] :: Type -> NonEmpty Type
OrType :: NonEmpty Type -> Type
[$sel:oItems:BaseType] :: Type -> NonEmpty Type
TupleType :: [Type] -> Type
[$sel:tItems:BaseType] :: Type -> [Type]
StructureLiteralType :: StructureLiteral -> Type
[$sel:stlValue:BaseType] :: Type -> StructureLiteral
StringLiteralType :: Text -> Type
[$sel:slValue:BaseType] :: Type -> Text
IntegerLiteralType :: Integer -> Type
[$sel:ilValue:BaseType] :: Type -> Integer
BooleanLiteralType :: Bool -> Type
[$sel:blValue:BaseType] :: Type -> Bool

-- | A request message.
data Request
Request :: Text -> Maybe Type -> Type -> Maybe Type -> Maybe Type -> Maybe Type -> MessageDirection -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Request
[$sel:method:Request] :: Request -> Text
[$sel:params:Request] :: Request -> Maybe Type
[$sel:result:Request] :: Request -> Type
[$sel:partialResult:Request] :: Request -> Maybe Type
[$sel:errorData:Request] :: Request -> Maybe Type
[$sel:registrationOptions:Request] :: Request -> Maybe Type
[$sel:messageDirection:Request] :: Request -> MessageDirection
[$sel:documentation:Request] :: Request -> Maybe Text
[$sel:since:Request] :: Request -> Maybe Text
[$sel:proposed:Request] :: Request -> Maybe Bool
[$sel:deprecated:Request] :: Request -> Maybe Text

-- | A notification message.
data Notification
Notification :: Text -> Maybe Type -> Maybe Type -> MessageDirection -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Notification
[$sel:method:Notification] :: Notification -> Text
[$sel:params:Notification] :: Notification -> Maybe Type
[$sel:registrationOptions:Notification] :: Notification -> Maybe Type
[$sel:messageDirection:Notification] :: Notification -> MessageDirection
[$sel:documentation:Notification] :: Notification -> Maybe Text
[$sel:since:Notification] :: Notification -> Maybe Text
[$sel:proposed:Notification] :: Notification -> Maybe Bool
[$sel:deprecated:Notification] :: Notification -> Maybe Text

-- | A structure type.
data Structure
Structure :: Text -> Maybe [Type] -> Maybe [Type] -> [Property] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Structure
[$sel:name:Structure] :: Structure -> Text
[$sel:extends:Structure] :: Structure -> Maybe [Type]
[$sel:mixins:Structure] :: Structure -> Maybe [Type]
[$sel:properties:Structure] :: Structure -> [Property]
[$sel:documentation:Structure] :: Structure -> Maybe Text
[$sel:since:Structure] :: Structure -> Maybe Text
[$sel:proposed:Structure] :: Structure -> Maybe Bool
[$sel:deprecated:Structure] :: Structure -> Maybe Text

-- | A type alias.
data TypeAlias
TypeAlias :: Text -> Type -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> TypeAlias
[$sel:name:TypeAlias] :: TypeAlias -> Text
[$sel:type_:TypeAlias] :: TypeAlias -> Type
[$sel:documentation:TypeAlias] :: TypeAlias -> Maybe Text
[$sel:since:TypeAlias] :: TypeAlias -> Maybe Text
[$sel:proposed:TypeAlias] :: TypeAlias -> Maybe Bool
[$sel:deprecated:TypeAlias] :: TypeAlias -> Maybe Text

-- | This is just 'string | int' on the typescript side, but it's
--   convenient to have a proper type here.
data TextOrInteger
T :: Text -> TextOrInteger
I :: Integer -> TextOrInteger

-- | An entry in an enumeration.
data EnumerationEntry
EnumerationEntry :: Text -> TextOrInteger -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> EnumerationEntry
[$sel:name:EnumerationEntry] :: EnumerationEntry -> Text
[$sel:value:EnumerationEntry] :: EnumerationEntry -> TextOrInteger
[$sel:documentation:EnumerationEntry] :: EnumerationEntry -> Maybe Text
[$sel:since:EnumerationEntry] :: EnumerationEntry -> Maybe Text
[$sel:proposed:EnumerationEntry] :: EnumerationEntry -> Maybe Bool
[$sel:deprecated:EnumerationEntry] :: EnumerationEntry -> Maybe Text

-- | An enumeration type.
data Enumeration
Enumeration :: Text -> Type -> [EnumerationEntry] -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Enumeration
[$sel:name:Enumeration] :: Enumeration -> Text
[$sel:type_:Enumeration] :: Enumeration -> Type
[$sel:values:Enumeration] :: Enumeration -> [EnumerationEntry]
[$sel:supportsCustomValues:Enumeration] :: Enumeration -> Maybe Bool
[$sel:documentation:Enumeration] :: Enumeration -> Maybe Text
[$sel:since:Enumeration] :: Enumeration -> Maybe Text
[$sel:proposed:Enumeration] :: Enumeration -> Maybe Bool
[$sel:deprecated:Enumeration] :: Enumeration -> Maybe Text

-- | Metadata about the metamodel iteslf.
data MetaData
MetaData :: Text -> MetaData
[$sel:version:MetaData] :: MetaData -> Text

-- | The entire metamodel.
data MetaModel
MetaModel :: MetaData -> [Request] -> [Notification] -> [Structure] -> [Enumeration] -> [TypeAlias] -> MetaModel
[$sel:metaData:MetaModel] :: MetaModel -> MetaData
[$sel:requests:MetaModel] :: MetaModel -> [Request]
[$sel:notifications:MetaModel] :: MetaModel -> [Notification]
[$sel:structures:MetaModel] :: MetaModel -> [Structure]
[$sel:enumerations:MetaModel] :: MetaModel -> [Enumeration]
[$sel:typeAliases:MetaModel] :: MetaModel -> [TypeAlias]
loadMetaModelFromFile :: FilePath -> Q Exp
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.Property
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.Property
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.StructureLiteral
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.StructureLiteral
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.BaseTypeName
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.BaseTypeName
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.Type
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.Type
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.Request
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.Request
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.Notification
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.Notification
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.Structure
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.Structure
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.TypeAlias
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.TypeAlias
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.TextOrInteger
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.TextOrInteger
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.EnumerationEntry
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.EnumerationEntry
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.Enumeration
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.Enumeration
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.MetaData
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.MetaData
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.MetaModel
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.MetaModel
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.MessageDirection
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.MessageDirection
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.MessageDirection
instance GHC.Show.Show Language.LSP.MetaModel.Types.MessageDirection
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.BaseTypeName
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.BaseTypeName
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.BaseTypeName
instance GHC.Show.Show Language.LSP.MetaModel.Types.BaseTypeName
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.Property
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.Property
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.Property
instance GHC.Show.Show Language.LSP.MetaModel.Types.Property
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.StructureLiteral
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.StructureLiteral
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.StructureLiteral
instance GHC.Show.Show Language.LSP.MetaModel.Types.StructureLiteral
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.Type
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.Type
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.Type
instance GHC.Show.Show Language.LSP.MetaModel.Types.Type
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.Request
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.Request
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.Request
instance GHC.Show.Show Language.LSP.MetaModel.Types.Request
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.Notification
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.Notification
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.Notification
instance GHC.Show.Show Language.LSP.MetaModel.Types.Notification
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.Structure
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.Structure
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.Structure
instance GHC.Show.Show Language.LSP.MetaModel.Types.Structure
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.TypeAlias
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.TypeAlias
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.TypeAlias
instance GHC.Show.Show Language.LSP.MetaModel.Types.TypeAlias
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.TextOrInteger
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.TextOrInteger
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.TextOrInteger
instance GHC.Show.Show Language.LSP.MetaModel.Types.TextOrInteger
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.EnumerationEntry
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.EnumerationEntry
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.EnumerationEntry
instance GHC.Show.Show Language.LSP.MetaModel.Types.EnumerationEntry
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.Enumeration
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.Enumeration
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.Enumeration
instance GHC.Show.Show Language.LSP.MetaModel.Types.Enumeration
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.MetaData
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.MetaData
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.MetaData
instance GHC.Show.Show Language.LSP.MetaModel.Types.MetaData
instance Language.Haskell.TH.Syntax.Lift Language.LSP.MetaModel.Types.MetaModel
instance GHC.Classes.Ord Language.LSP.MetaModel.Types.MetaModel
instance GHC.Classes.Eq Language.LSP.MetaModel.Types.MetaModel
instance GHC.Show.Show Language.LSP.MetaModel.Types.MetaModel
instance Data.Aeson.Types.ToJSON.ToJSON Language.LSP.MetaModel.Types.MessageDirection
instance Data.Aeson.Types.FromJSON.FromJSON Language.LSP.MetaModel.Types.MessageDirection

module Language.LSP.MetaModel

-- | The metamodel used to generate the LSP types in this package.
metaModel :: MetaModel
